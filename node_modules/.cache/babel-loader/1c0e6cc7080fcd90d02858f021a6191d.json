{"ast":null,"code":"var _jsxFileName = \"E:\\\\higher-studies-portal\\\\src\\\\components\\\\StudentTip.js\";\nimport { Avatar, Chip } from \"@material-ui/core\";\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\nimport ThumbDownIcon from \"@material-ui/icons/ThumbDown\";\nimport GetRandomAvatarColor from \"../styleComponents/GetRandomAvatarColor\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function StudentTip({\n  authorName,\n  authorUniversity,\n  tipText,\n  upVotes,\n  downVotes,\n  onVoteCallback\n}) {\n  const getUpvoteButtonVariant = () => {\n    // for(const facultyID of post.upvotes){\n    //     if(facultyID===sessionStorage.USER_DB_ID){\n    //         return \"default\";\n    //     }\n    // }\n    return \"outlined\";\n  };\n\n  const getDownvoteButtonVariant = () => {\n    // for(const facultyID of post.downvotes){\n    //     if(facultyID===sessionStorage.USER_DB_ID){\n    //         return \"default\";\n    //     }\n    // }\n    return \"outlined\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"universityTipCard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'tipAuthorRow',\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: GetRandomAvatarColor('random'),\n        sizes: 'small',\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 84\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: 'tipAuthorText',\n        children: authorName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: 'tipAuthorUniversity',\n      children: authorUniversity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: 'universityTip',\n      children: tipText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'voteReaction',\n      children: [/*#__PURE__*/_jsxDEV(Chip, {\n        icon: /*#__PURE__*/_jsxDEV(ThumbUpIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 29\n        }, this),\n        className: 'upVoteButton',\n        label: upVotes,\n        clickable: true,\n        color: \"primary\",\n        onClick: () => {},\n        variant: getUpvoteButtonVariant()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Chip, {\n        icon: /*#__PURE__*/_jsxDEV(ThumbDownIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 29\n        }, this),\n        className: 'downVoteButton',\n        label: downVotes,\n        clickable: true,\n        color: \"secondary\",\n        onClick: () => {},\n        variant: getDownvoteButtonVariant()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_c = StudentTip;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudentTip\");","map":{"version":3,"sources":["E:/higher-studies-portal/src/components/StudentTip.js"],"names":["Avatar","Chip","ThumbUpIcon","ThumbDownIcon","GetRandomAvatarColor","StudentTip","authorName","authorUniversity","tipText","upVotes","downVotes","onVoteCallback","getUpvoteButtonVariant","getDownvoteButtonVariant"],"mappings":";AAAA,SAAQA,MAAR,EAAgBC,IAAhB,QAA2B,mBAA3B;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,oBAAP,MAAiC,yCAAjC;;AAGA,eAAe,SAASC,UAAT,CAAoB;AAACC,EAAAA,UAAD;AAAYC,EAAAA,gBAAZ;AAA6BC,EAAAA,OAA7B;AAAqCC,EAAAA,OAArC;AAA6CC,EAAAA,SAA7C;AAAuDC,EAAAA;AAAvD,CAApB,EAA2F;AAItG,QAAMC,sBAAsB,GAAC,MAAI;AAC7B;AACA;AACA;AACA;AACA;AACA,WAAO,UAAP;AACH,GAPD;;AASA,QAAMC,wBAAwB,GAAC,MAAI;AAC/B;AACA;AACA;AACA;AACA;AACA,WAAO,UAAP;AACH,GAPD;;AAUA,sBACI;AAAK,IAAA,SAAS,EAAE,mBAAhB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAE,cAAhB;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAET,oBAAoB,CAAC,QAAD,CAAvC;AAAmD,QAAA,KAAK,EAAE,OAA1D;AAAA,+BAAmE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAnE;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAG,QAAA,SAAS,EAAE,eAAd;AAAA,kBAAgCE;AAAhC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAG,MAAA,SAAS,EAAE,qBAAd;AAAA,gBAAsCC;AAAtC;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAG,MAAA,SAAS,EAAE,eAAd;AAAA,gBAAgCC;AAAhC;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAK,MAAA,SAAS,EAAE,cAAhB;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,IAAI,eAAE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,gBAAZ;AAA4B,QAAA,SAAS,EAAE,cAAvC;AAAuD,QAAA,KAAK,EAAEC,OAA9D;AAAuE,QAAA,SAAS,MAAhF;AAAiF,QAAA,KAAK,EAAC,SAAvF;AAAiG,QAAA,OAAO,EAAE,MAAI,CAAE,CAAhH;AAAkH,QAAA,OAAO,EAAEG,sBAAsB;AAAjJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD;AAAM,QAAA,IAAI,eAAE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,gBAAZ;AAA8B,QAAA,SAAS,EAAE,gBAAzC;AAA2D,QAAA,KAAK,EAAEF,SAAlE;AAA6E,QAAA,SAAS,MAAtF;AAAuF,QAAA,KAAK,EAAC,WAA7F;AAAyG,QAAA,OAAO,EAAE,MAAI,CAAE,CAAxH;AAA0H,QAAA,OAAO,EAAEG,wBAAwB;AAA3J;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;KArCuBR,U","sourcesContent":["import {Avatar, Chip} from \"@material-ui/core\";\r\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\r\nimport ThumbDownIcon from \"@material-ui/icons/ThumbDown\";\r\nimport GetRandomAvatarColor from \"../styleComponents/GetRandomAvatarColor\";\r\n\r\n\r\nexport default function StudentTip({authorName,authorUniversity,tipText,upVotes,downVotes,onVoteCallback}){\r\n\r\n\r\n\r\n    const getUpvoteButtonVariant=()=>{\r\n        // for(const facultyID of post.upvotes){\r\n        //     if(facultyID===sessionStorage.USER_DB_ID){\r\n        //         return \"default\";\r\n        //     }\r\n        // }\r\n        return \"outlined\";\r\n    }\r\n\r\n    const getDownvoteButtonVariant=()=>{\r\n        // for(const facultyID of post.downvotes){\r\n        //     if(facultyID===sessionStorage.USER_DB_ID){\r\n        //         return \"default\";\r\n        //     }\r\n        // }\r\n        return \"outlined\";\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={\"universityTipCard\"}>\r\n            <div className={'tipAuthorRow'}>\r\n                <Avatar className={GetRandomAvatarColor('random')} sizes={'small'}><b>A</b></Avatar>\r\n                <p className={'tipAuthorText'}>{authorName}</p>\r\n            </div>\r\n            <p className={'tipAuthorUniversity'}>{authorUniversity}</p>\r\n            <p className={'universityTip'}>{tipText}</p>\r\n            <div className={'voteReaction'}>\r\n                <Chip icon={<ThumbUpIcon/>} className={'upVoteButton'} label={upVotes} clickable color=\"primary\" onClick={()=>{}} variant={getUpvoteButtonVariant()}/>\r\n                <Chip icon={<ThumbDownIcon/>} className={'downVoteButton'} label={downVotes} clickable color=\"secondary\" onClick={()=>{}} variant={getDownvoteButtonVariant()}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}